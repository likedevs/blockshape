const process = require("process");
const {exec} = require("child_process");
const util = require("util");
const {existsSync} = require("fs");
const execAsync = util.promisify(exec);
const {
    parse,
    addDays,
    addYears,
    isWeekend,
    setHours,
    setMinutes
} = require("date-fns");
const chalk = require("chalk");
const ora = require("ora");
const boxen = require("boxen");

module.exports = function ({commitsPerDay, workdaysOnly, startDate, endDate}) {
    const commitDateList = createCommitDateList({
        workdaysOnly,
        commitsPerDay: commitsPerDay.split(","),
        startDate: startDate ? parse(startDate) : addYears(new Date(), -1),
        endDate: endDate ? parse(endDate) : new Date()
    });

    (async function () {
        const spinner = ora("Generating your GitHub activity\n").start();

        const historyFolder = "my-history";

        // Remove git history folder in case if it already exists.]
        if (existsSync(`./${historyFolder}`)) {
            await execAsync(
                `${
                    process.platform === "win32" ? "rmdir /s /q" : "rm -rf"
                } ${historyFolder}`
            );
        }

        // Create git history folder.
        await execAsync(`mkdir ${historyFolder}`);
        process.chdir(historyFolder);
        await execAsync(`git init`);

        // Create commits.
        for (const date of commitDateList) {
            // Change spinner so user can get the progress right now.
            const dateFormatted = new Intl.DateTimeFormat("en", {
                day: "numeric",
                month: "long",
                year: "numeric"
            }).format(date);
            spinner.text = `Generating your Github activity... (${dateFormatted})\n`;


            // ++++++++++++++++++++++++++++++++++++++++

            var verbs, nouns, adjectives, adverbs, preposition;
            nouns = ["bird", "clock", "boy", "plastic", "duck", "teacher", "old lady", "professor", "hamster", "dog"];
            verbs = ["Add", "Remove", "Fix", "Change", "Apply", "Modify", "Refactor", "Edit"];
            adjectives = ["beautiful", "lazy", "professional", "lovely", "dumb", "rough", "soft", "hot", "vibrating", "slimy"];
            adverbs = ["slowly", "elegantly", "precisely", "quickly", "sadly", "humbly", "proudly", "shockingly", "calmly", "passionately"];
            preposition = ["down", "into", "up", "on", "upon", "below", "above", "through", "across", "towards"];

            function randGen() {
                return Math.floor(Math.random() * 5);
            }

            function sentence() {
                var rand1 = Math.floor(Math.random() * 10);
                var rand2 = Math.floor(Math.random() * 10);
                var rand3 = Math.floor(Math.random() * 10);
                var rand4 = Math.floor(Math.random() * 10);
                var rand5 = Math.floor(Math.random() * 10);
                var rand6 = Math.floor(Math.random() * 10);

                var content = verbs[rand4]  + " " + nouns[rand2] + " " + adverbs[rand3] + " " + nouns[rand1] + " " + adverbs[rand1] + " " + verbs[rand1] + " " + preposition[rand1] + " a " + adjectives[rand2];

                return content;
            };
            let sent = sentence();

            await execAsync(`echo "${date}" > foo.txt`);
            await execAsync(`git add .`);
            await execAsync(`git commit --quiet --date "${date}" -m "${sent}"`);
        }

        spinner.succeed();

        console.log(
            boxen(
                `${chalk.green("Success")} ${
                    commitDateList.length
                } commits have been created.
      If you rely on this tool, please consider buying me a cup of coffee. I would appreciate it 
      ${chalk.blueBright("https://www.buymeacoffee.com/artiebits")}`,
                {borderColor: "yellow", padding: 1, align: "center"}
            )
        );
    })();
};

function getRandomIntInclusive(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function createCommitDateList({
                                  commitsPerDay,
                                  workdaysOnly,
                                  startDate,
                                  endDate
                              }) {
    const commitDateList = [];
    let currentDate = startDate;

    while (currentDate <= endDate) {
        if (workdaysOnly && isWeekend(currentDate)) {
            currentDate = addDays(currentDate, 1);
            continue;
        }
        for (let i = 0; i < getRandomIntInclusive(...commitsPerDay); i++) {
            const dateWithHours = setHours(currentDate, getRandomIntInclusive(9, 16));
            const commitDate = setMinutes(
                dateWithHours,
                getRandomIntInclusive(0, 59)
            );
            commitDateList.push(commitDate);
        }
        currentDate = addDays(currentDate, 1);
    }

    return commitDateList;
}
